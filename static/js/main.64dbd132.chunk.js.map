{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["URL","API_KEY","fetchWeather","a","query","axios","get","data","App","useState","setquery","weather","setWeather","useEffect","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"2QAEMA,EAAM,kDACNC,EAAU,mCAEHC,EAAY,uCAAG,4CAAAC,EAAA,6DAAOC,EAAP,+BAAe,WAAf,SACJC,IAAMC,IAAN,UAAaN,EAAb,cAAsBI,EAAtB,+BAAkDH,IAD9C,uBACnBM,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qD,MC4CVC,MA9Cf,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACPL,EADO,KACAM,EADA,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,KAGdC,qBAAU,cAAU,IACpB,IAAMC,EAAM,uCAAG,WAAOC,GAAP,eAAAZ,EAAA,yDACA,UAAVY,EAAEC,IADQ,gCAEMd,EAAaE,GAFnB,OAEPG,EAFO,OAGbK,EAAWL,GACXG,EAAS,IAJI,2CAAH,sDAQZ,OACC,yBAAKO,UAAU,kBACd,2BACCC,KAAK,OACLD,UAAU,SACVE,YAAY,YACZC,MAAOhB,EACPiB,SAAU,SAACN,GAAD,OAAOL,EAASK,EAAEO,OAAOF,QACnCG,WAAYT,IAEZH,EAAQa,MACR,yBAAKP,UAAU,QACd,yBAAKA,UAAU,aACd,8BAAON,EAAQc,MACf,6BAAMd,EAAQe,IAAIC,UAEnB,yBAAKV,UAAU,aACbW,KAAKC,MAAMlB,EAAQa,KAAKM,MACzB,sCAED,yBAAKb,UAAU,QACd,yBACCc,IAAG,4CAAuCpB,EAAQA,QAAQ,GAAGqB,KAA1D,WACHC,IAAKtB,EAAQA,QAAQ,GAAGuB,YACxBjB,UAAU,cAEX,2BAAIN,EAAQA,QAAQ,GAAGuB,iBCpC7BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.64dbd132.chunk.js","sourcesContent":["import axios from 'axios';\n// https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=YOUR_API_KEY\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = '7f7827291535e1a821b750e8bd017487';\n\nexport const fetchWeather = async (query = 'Rajshahi') => {\n\tconst { data } = await axios.get(`${URL}?q=${query}&units=metric&appid=${API_KEY}`);\n\treturn data;\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchWeather } from './api/fetchWeather';\nimport './App.css';\nfunction App() {\n\tconst [query, setquery] = useState('');\n\tconst [weather, setWeather] = useState({});\n\tuseEffect(() => {}, []);\n\tconst search = async (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\tconst data = await fetchWeather(query);\n\t\t\tsetWeather(data);\n\t\t\tsetquery('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='main-container'>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclassName='search'\n\t\t\t\tplaceholder='Search...'\n\t\t\t\tvalue={query}\n\t\t\t\tonChange={(e) => setquery(e.target.value)}\n\t\t\t\tonKeyPress={search}\n\t\t\t/>\n\t\t\t{weather.main && (\n\t\t\t\t<div className='city'>\n\t\t\t\t\t<div className='city-name'>\n\t\t\t\t\t\t<span>{weather.name}</span>\n\t\t\t\t\t\t<sup>{weather.sys.country}</sup>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='city-temp'>\n\t\t\t\t\t\t{Math.round(weather.main.temp)}\n\t\t\t\t\t\t<sup>&deg;</sup>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='info'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n\t\t\t\t\t\t\talt={weather.weather[0].description}\n\t\t\t\t\t\t\tclassName='city-icon'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p>{weather.weather[0].description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}